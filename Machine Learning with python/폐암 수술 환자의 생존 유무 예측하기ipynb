{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"폐암 수술 환자의 생존 유무 예측하기ipynb","provenance":[],"authorship_tag":"ABX9TyPoF38frwvUQ+IlgscDGwSW"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","metadata":{"id":"Jw1NZ8RtjXIK"},"source":["폐암 수술 환자의 생존유무 예측하기 (1:생존, 0:사망)"]},{"cell_type":"markdown","metadata":{"id":"Htm1m6ljjoMC"},"source":["데이터 준비하기"]},{"cell_type":"code","metadata":{"id":"4Gd1517BjTRA","executionInfo":{"status":"ok","timestamp":1625454716354,"user_tz":-540,"elapsed":2626,"user":{"displayName":"김미소","photoUrl":"","userId":"06891495598567292881"}}},"source":["import numpy as np\n","import pandas as pd\n","import tensorflow as tf\n","from keras.models import Sequential\n","from keras.layers import Dense\n","\n","# 랜덤 시드 고정시키기\n","np.random.seed(5)"],"execution_count":1,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"a2b_5_XJjsCw","executionInfo":{"status":"ok","timestamp":1625454716358,"user_tz":-540,"elapsed":26,"user":{"displayName":"김미소","photoUrl":"","userId":"06891495598567292881"}},"outputId":"e744d146-dc83-4e72-a813-95bd2a8fe4ec"},"source":["dataset= np.loadtxt('/content/ThoraricSurgery.csv', delimiter=',')\n","dataset.shape"],"execution_count":2,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(470, 18)"]},"metadata":{"tags":[]},"execution_count":2}]},{"cell_type":"markdown","metadata":{"id":"ZR27wN7lkNKv"},"source":["데이터 생성하기 - 입력 (속성값 17개;문제집), 출력(판정결과1개;정답지) 변수로 분리"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8RI3M7KLj9pp","executionInfo":{"status":"ok","timestamp":1625454716359,"user_tz":-540,"elapsed":14,"user":{"displayName":"김미소","photoUrl":"","userId":"06891495598567292881"}},"outputId":"10df0d61-be04-45f7-de32-9720f2760c15"},"source":["# 학습 데이터 420개 가져오기\n","X_train =dataset[:420, 0:17]\n","y_train =dataset[:420, 17]\n","\n","# 테스트 데이터 50개 가져오기\n","X_test = dataset[420:, 0:17]\n","y_test = dataset[420:, 17]\n","\n","X_train.shape"],"execution_count":3,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(420, 17)"]},"metadata":{"tags":[]},"execution_count":3}]},{"cell_type":"markdown","metadata":{"id":"4CMQJ0Aykyet"},"source":["모델 구성하기"]},{"cell_type":"code","metadata":{"id":"XsQmuGaxkxOW","executionInfo":{"status":"ok","timestamp":1625454716360,"user_tz":-540,"elapsed":12,"user":{"displayName":"김미소","photoUrl":"","userId":"06891495598567292881"}}},"source":["model = Sequential()\n","model.add(Dense(30, input_dim=17, activation='relu')) #첫번째 층은 8개 입력할거야, relu로 해줘\n","model.add(Dense(20, activation='relu'))\n","model.add(Dense(10, activation='relu'))\n","model.add(Dense(1, activation='softmax'))"],"execution_count":4,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"t2c4UBUdlqYV"},"source":["모델 설정하기"]},{"cell_type":"code","metadata":{"id":"waBg3zKBl_uq","executionInfo":{"status":"ok","timestamp":1625454716360,"user_tz":-540,"elapsed":11,"user":{"displayName":"김미소","photoUrl":"","userId":"06891495598567292881"}}},"source":["model.compile(loss='binary_crossentropy', optimizer='adam',\n","              metrics=['accuracy']) #리스트 형태로 되어있음"],"execution_count":5,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"tPRu7c7vlw_S"},"source":["모델 학습하기"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JBsNZ1j3lyed","executionInfo":{"status":"ok","timestamp":1625454735540,"user_tz":-540,"elapsed":19190,"user":{"displayName":"김미소","photoUrl":"","userId":"06891495598567292881"}},"outputId":"1caae33f-dfb5-4fcd-aeed-67df6d080ae2"},"source":["history=model.fit(X_train, y_train,\n","                  epochs=100,\n","                  batch_size=64)"],"execution_count":6,"outputs":[{"output_type":"stream","text":["Epoch 1/100\n","7/7 [==============================] - 14s 3ms/step - loss: 4.6287 - accuracy: 0.1464\n","Epoch 2/100\n","7/7 [==============================] - 0s 3ms/step - loss: 1.4328 - accuracy: 0.1516\n","Epoch 3/100\n","7/7 [==============================] - 0s 3ms/step - loss: 1.0838 - accuracy: 0.1406\n","Epoch 4/100\n","7/7 [==============================] - 0s 3ms/step - loss: 0.8879 - accuracy: 0.1541\n","Epoch 5/100\n","7/7 [==============================] - 0s 4ms/step - loss: 0.7981 - accuracy: 0.1691\n","Epoch 6/100\n","7/7 [==============================] - 0s 3ms/step - loss: 0.5465 - accuracy: 0.1426\n","Epoch 7/100\n","7/7 [==============================] - 0s 3ms/step - loss: 0.4376 - accuracy: 0.1476\n","Epoch 8/100\n","7/7 [==============================] - 0s 3ms/step - loss: 0.4594 - accuracy: 0.1554\n","Epoch 9/100\n","7/7 [==============================] - 0s 3ms/step - loss: 0.4289 - accuracy: 0.1537\n","Epoch 10/100\n","7/7 [==============================] - 0s 3ms/step - loss: 0.4206 - accuracy: 0.1476\n","Epoch 11/100\n","7/7 [==============================] - 0s 3ms/step - loss: 0.4140 - accuracy: 0.1486\n","Epoch 12/100\n","7/7 [==============================] - 0s 2ms/step - loss: 0.4140 - accuracy: 0.1483\n","Epoch 13/100\n","7/7 [==============================] - 0s 3ms/step - loss: 0.3925 - accuracy: 0.1357\n","Epoch 14/100\n","7/7 [==============================] - 0s 2ms/step - loss: 0.3852 - accuracy: 0.1320\n","Epoch 15/100\n","7/7 [==============================] - 0s 3ms/step - loss: 0.4127 - accuracy: 0.1486\n","Epoch 16/100\n","7/7 [==============================] - 0s 3ms/step - loss: 0.4069 - accuracy: 0.1407\n","Epoch 17/100\n","7/7 [==============================] - 0s 2ms/step - loss: 0.3995 - accuracy: 0.1405\n","Epoch 18/100\n","7/7 [==============================] - 0s 3ms/step - loss: 0.4347 - accuracy: 0.1625\n","Epoch 19/100\n","7/7 [==============================] - 0s 2ms/step - loss: 0.3808 - accuracy: 0.1308\n","Epoch 20/100\n","7/7 [==============================] - 0s 2ms/step - loss: 0.3794 - accuracy: 0.1326\n","Epoch 21/100\n","7/7 [==============================] - 0s 2ms/step - loss: 0.3907 - accuracy: 0.1387\n","Epoch 22/100\n","7/7 [==============================] - 0s 2ms/step - loss: 0.4227 - accuracy: 0.1575\n","Epoch 23/100\n","7/7 [==============================] - 0s 3ms/step - loss: 0.4070 - accuracy: 0.1523\n","Epoch 24/100\n","7/7 [==============================] - 0s 3ms/step - loss: 0.4314 - accuracy: 0.1606\n","Epoch 25/100\n","7/7 [==============================] - 0s 3ms/step - loss: 0.4174 - accuracy: 0.1575\n","Epoch 26/100\n","7/7 [==============================] - 0s 3ms/step - loss: 0.3924 - accuracy: 0.1407\n","Epoch 27/100\n","7/7 [==============================] - 0s 3ms/step - loss: 0.4003 - accuracy: 0.1426\n","Epoch 28/100\n","7/7 [==============================] - 0s 4ms/step - loss: 0.4000 - accuracy: 0.1447\n","Epoch 29/100\n","7/7 [==============================] - 0s 4ms/step - loss: 0.4112 - accuracy: 0.1501\n","Epoch 30/100\n","7/7 [==============================] - 0s 3ms/step - loss: 0.4118 - accuracy: 0.1515\n","Epoch 31/100\n","7/7 [==============================] - 0s 2ms/step - loss: 0.4127 - accuracy: 0.1494\n","Epoch 32/100\n","7/7 [==============================] - 0s 3ms/step - loss: 0.3902 - accuracy: 0.1405\n","Epoch 33/100\n","7/7 [==============================] - 0s 4ms/step - loss: 0.3881 - accuracy: 0.1349\n","Epoch 34/100\n","7/7 [==============================] - 0s 3ms/step - loss: 0.3585 - accuracy: 0.1194\n","Epoch 35/100\n","7/7 [==============================] - 0s 4ms/step - loss: 0.3952 - accuracy: 0.1441\n","Epoch 36/100\n","7/7 [==============================] - 0s 2ms/step - loss: 0.3861 - accuracy: 0.1353\n","Epoch 37/100\n","7/7 [==============================] - 0s 3ms/step - loss: 0.3792 - accuracy: 0.1388\n","Epoch 38/100\n","7/7 [==============================] - 0s 3ms/step - loss: 0.4035 - accuracy: 0.1436\n","Epoch 39/100\n","7/7 [==============================] - 0s 2ms/step - loss: 0.3764 - accuracy: 0.1329\n","Epoch 40/100\n","7/7 [==============================] - 0s 3ms/step - loss: 0.4017 - accuracy: 0.1441\n","Epoch 41/100\n","7/7 [==============================] - 0s 3ms/step - loss: 0.3955 - accuracy: 0.1423\n","Epoch 42/100\n","7/7 [==============================] - 0s 3ms/step - loss: 0.4125 - accuracy: 0.1581\n","Epoch 43/100\n","7/7 [==============================] - 0s 3ms/step - loss: 0.3764 - accuracy: 0.1309\n","Epoch 44/100\n","7/7 [==============================] - 0s 3ms/step - loss: 0.3535 - accuracy: 0.1169\n","Epoch 45/100\n","7/7 [==============================] - 0s 2ms/step - loss: 0.4076 - accuracy: 0.1524\n","Epoch 46/100\n","7/7 [==============================] - 0s 2ms/step - loss: 0.3889 - accuracy: 0.1420\n","Epoch 47/100\n","7/7 [==============================] - 0s 2ms/step - loss: 0.4116 - accuracy: 0.1485\n","Epoch 48/100\n","7/7 [==============================] - 0s 3ms/step - loss: 0.4156 - accuracy: 0.1572\n","Epoch 49/100\n","7/7 [==============================] - 0s 2ms/step - loss: 0.3755 - accuracy: 0.1325\n","Epoch 50/100\n","7/7 [==============================] - 0s 2ms/step - loss: 0.4232 - accuracy: 0.1604\n","Epoch 51/100\n","7/7 [==============================] - 0s 2ms/step - loss: 0.3999 - accuracy: 0.1508\n","Epoch 52/100\n","7/7 [==============================] - 0s 3ms/step - loss: 0.3821 - accuracy: 0.1378\n","Epoch 53/100\n","7/7 [==============================] - 0s 3ms/step - loss: 0.4145 - accuracy: 0.1572\n","Epoch 54/100\n","7/7 [==============================] - 0s 4ms/step - loss: 0.3672 - accuracy: 0.1256\n","Epoch 55/100\n","7/7 [==============================] - 0s 3ms/step - loss: 0.4125 - accuracy: 0.1501\n","Epoch 56/100\n","7/7 [==============================] - 0s 5ms/step - loss: 0.3945 - accuracy: 0.1436\n","Epoch 57/100\n","7/7 [==============================] - 0s 4ms/step - loss: 0.4031 - accuracy: 0.1527\n","Epoch 58/100\n","7/7 [==============================] - 0s 3ms/step - loss: 0.3575 - accuracy: 0.1289\n","Epoch 59/100\n","7/7 [==============================] - 0s 2ms/step - loss: 0.3878 - accuracy: 0.1422\n","Epoch 60/100\n","7/7 [==============================] - 0s 3ms/step - loss: 0.3974 - accuracy: 0.1453\n","Epoch 61/100\n","7/7 [==============================] - 0s 3ms/step - loss: 0.3906 - accuracy: 0.1468\n","Epoch 62/100\n","7/7 [==============================] - 0s 3ms/step - loss: 0.3809 - accuracy: 0.1398\n","Epoch 63/100\n","7/7 [==============================] - 0s 3ms/step - loss: 0.3618 - accuracy: 0.1288\n","Epoch 64/100\n","7/7 [==============================] - 0s 3ms/step - loss: 0.3579 - accuracy: 0.1226\n","Epoch 65/100\n","7/7 [==============================] - 0s 3ms/step - loss: 0.3653 - accuracy: 0.1287\n","Epoch 66/100\n","7/7 [==============================] - 0s 3ms/step - loss: 0.3880 - accuracy: 0.1359\n","Epoch 67/100\n","7/7 [==============================] - 0s 3ms/step - loss: 0.3769 - accuracy: 0.1362\n","Epoch 68/100\n","7/7 [==============================] - 0s 2ms/step - loss: 0.3731 - accuracy: 0.1347\n","Epoch 69/100\n","7/7 [==============================] - 0s 2ms/step - loss: 0.4135 - accuracy: 0.1580\n","Epoch 70/100\n","7/7 [==============================] - 0s 3ms/step - loss: 0.3834 - accuracy: 0.1408\n","Epoch 71/100\n","7/7 [==============================] - 0s 3ms/step - loss: 0.3614 - accuracy: 0.1324\n","Epoch 72/100\n","7/7 [==============================] - 0s 3ms/step - loss: 0.4110 - accuracy: 0.1522\n","Epoch 73/100\n","7/7 [==============================] - 0s 3ms/step - loss: 0.3648 - accuracy: 0.1281\n","Epoch 74/100\n","7/7 [==============================] - 0s 3ms/step - loss: 0.3708 - accuracy: 0.1347\n","Epoch 75/100\n","7/7 [==============================] - 0s 4ms/step - loss: 0.3953 - accuracy: 0.1512\n","Epoch 76/100\n","7/7 [==============================] - 0s 3ms/step - loss: 0.4121 - accuracy: 0.1591\n","Epoch 77/100\n","7/7 [==============================] - 0s 3ms/step - loss: 0.3941 - accuracy: 0.1468\n","Epoch 78/100\n","7/7 [==============================] - 0s 3ms/step - loss: 0.3755 - accuracy: 0.1417\n","Epoch 79/100\n","7/7 [==============================] - 0s 2ms/step - loss: 0.3812 - accuracy: 0.1433\n","Epoch 80/100\n","7/7 [==============================] - 0s 2ms/step - loss: 0.3958 - accuracy: 0.1511\n","Epoch 81/100\n","7/7 [==============================] - 0s 4ms/step - loss: 0.4037 - accuracy: 0.1561\n","Epoch 82/100\n","7/7 [==============================] - 0s 3ms/step - loss: 0.3998 - accuracy: 0.1481\n","Epoch 83/100\n","7/7 [==============================] - 0s 3ms/step - loss: 0.3788 - accuracy: 0.1370\n","Epoch 84/100\n","7/7 [==============================] - 0s 3ms/step - loss: 0.3765 - accuracy: 0.1416\n","Epoch 85/100\n","7/7 [==============================] - 0s 3ms/step - loss: 0.3946 - accuracy: 0.1518\n","Epoch 86/100\n","7/7 [==============================] - 0s 3ms/step - loss: 0.3874 - accuracy: 0.1480\n","Epoch 87/100\n","7/7 [==============================] - 0s 3ms/step - loss: 0.3602 - accuracy: 0.1301\n","Epoch 88/100\n","7/7 [==============================] - 0s 3ms/step - loss: 0.3704 - accuracy: 0.1414\n","Epoch 89/100\n","7/7 [==============================] - 0s 3ms/step - loss: 0.3609 - accuracy: 0.1314\n","Epoch 90/100\n","7/7 [==============================] - 0s 3ms/step - loss: 0.3785 - accuracy: 0.1462\n","Epoch 91/100\n","7/7 [==============================] - 0s 3ms/step - loss: 0.3629 - accuracy: 0.1359\n","Epoch 92/100\n","7/7 [==============================] - 0s 3ms/step - loss: 0.3672 - accuracy: 0.1342\n","Epoch 93/100\n","7/7 [==============================] - 0s 3ms/step - loss: 0.3618 - accuracy: 0.1247\n","Epoch 94/100\n","7/7 [==============================] - 0s 4ms/step - loss: 0.3519 - accuracy: 0.1348\n","Epoch 95/100\n","7/7 [==============================] - 0s 3ms/step - loss: 0.3861 - accuracy: 0.1496\n","Epoch 96/100\n","7/7 [==============================] - 0s 3ms/step - loss: 0.3618 - accuracy: 0.1306\n","Epoch 97/100\n","7/7 [==============================] - 0s 3ms/step - loss: 0.3698 - accuracy: 0.1350\n","Epoch 98/100\n","7/7 [==============================] - 0s 4ms/step - loss: 0.3567 - accuracy: 0.1284\n","Epoch 99/100\n","7/7 [==============================] - 0s 3ms/step - loss: 0.3634 - accuracy: 0.1367\n","Epoch 100/100\n","7/7 [==============================] - 0s 4ms/step - loss: 0.3788 - accuracy: 0.1452\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":350},"id":"lxUWBC7CmFLO","executionInfo":{"status":"ok","timestamp":1625454736239,"user_tz":-540,"elapsed":720,"user":{"displayName":"김미소","photoUrl":"","userId":"06891495598567292881"}},"outputId":"d15b1207-08ec-4b90-803c-4c2d6c21da0d"},"source":["import matplotlib.pyplot as plt\n","\n","his_dict = history.history\n","loss = his_dict['loss']\n","\n","epochs = range(1, len(loss) + 1)\n","fig = plt.figure(figsize = (10, 5))\n","\n","# 훈련 및 검증 손실 그리기\n","ax1 = fig.add_subplot(1, 2, 1)\n","ax1.plot(epochs, loss, color = 'orange', label = 'train_loss')\n","ax1.set_title('train loss')\n","ax1.set_xlabel('epochs')\n","ax1.set_ylabel('loss')\n","ax1.legend()\n","\n","acc = his_dict['accuracy']\n","\n","# 훈련 및 검증 정확도 그리기\n","ax2 = fig.add_subplot(1, 2, 2)\n","ax2.plot(epochs, acc, color = 'blue', label = 'train_accuracy')\n","ax2.set_title('train accuracy')\n","ax2.set_xlabel('epochs')\n","ax2.set_ylabel('accuracy')\n","ax2.legend()\n","\n","plt.show()"],"execution_count":7,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 720x360 with 2 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"mxk4KsHPmjI0","executionInfo":{"status":"ok","timestamp":1625454736743,"user_tz":-540,"elapsed":517,"user":{"displayName":"김미소","photoUrl":"","userId":"06891495598567292881"}},"outputId":"312bf4b4-91d5-48d5-f6de-e5f236c45d43"},"source":["scores = model.evaluate(X_test, y_test)\n","print(\"%s: %.2f%%\" %(model.metrics_names[1], scores[1]*100))\n"],"execution_count":8,"outputs":[{"output_type":"stream","text":["2/2 [==============================] - 1s 7ms/step - loss: 0.5609 - accuracy: 0.2000\n","accuracy: 20.00%\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"ul0GwLKWmrR-","executionInfo":{"status":"ok","timestamp":1625454736746,"user_tz":-540,"elapsed":13,"user":{"displayName":"김미소","photoUrl":"","userId":"06891495598567292881"}}},"source":["# ROC 커브\n","\n","def plot_auc_roc(model):\n","    probs = model.predict_classes(X_test)\n","    fpr, tpr, threshold = metrics.roc_curve(y_test, probs)\n","    roc_auc = metrics.auc(fpr, tpr)\n","\n","    # method I: plt\n","    import matplotlib.pyplot as plt\n","    plt.title('Receiver Operating Characteristic')\n","    plt.plot(fpr, tpr, 'b', label = 'AUC = %0.2f' % roc_auc)\n","    plt.legend(loc = 'lower right')\n","    plt.plot([0, 1], [0, 1],'r--')\n","    plt.xlim([0, 1])\n","    plt.ylim([0, 1])\n","    plt.ylabel('True Positive Rate')\n","    plt.xlabel('False Positive Rate')\n","    plt.show()"],"execution_count":9,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"KFqXKEEzm9wt","executionInfo":{"status":"ok","timestamp":1625454736748,"user_tz":-540,"elapsed":15,"user":{"displayName":"김미소","photoUrl":"","userId":"06891495598567292881"}},"outputId":"759bf563-341e-44dc-d0c9-6f267909bd23"},"source":["# 모델 예측하기\n","np.set_printoptions(suppress=True)\n","result = model.predict_classes(X_test)\n"],"execution_count":10,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/keras/engine/sequential.py:450: UserWarning: `model.predict_classes()` is deprecated and will be removed after 2021-01-01. Please use instead:* `np.argmax(model.predict(x), axis=-1)`,   if your model does multi-class classification   (e.g. if it uses a `softmax` last-layer activation).* `(model.predict(x) > 0.5).astype(\"int32\")`,   if your model does binary classification   (e.g. if it uses a `sigmoid` last-layer activation).\n","  warnings.warn('`model.predict_classes()` is deprecated and '\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"VkSutI9Ooehz","executionInfo":{"status":"ok","timestamp":1625454736749,"user_tz":-540,"elapsed":13,"user":{"displayName":"김미소","photoUrl":"","userId":"06891495598567292881"}},"outputId":"b62289c1-670a-4375-cbf0-c83a154c7e11"},"source":["y_test"],"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 1., 0., 0., 0., 0., 1., 0., 0., 1., 1., 0.,\n","       0., 1., 1., 0., 1., 0., 0., 1., 1., 0., 0., 0., 0., 0., 1., 0.])"]},"metadata":{"tags":[]},"execution_count":11}]},{"cell_type":"code","metadata":{"id":"odX6nFNDp2jS","executionInfo":{"status":"ok","timestamp":1625454771198,"user_tz":-540,"elapsed":1117,"user":{"displayName":"김미소","photoUrl":"","userId":"06891495598567292881"}},"outputId":"30d9dcc9-b337-4fff-8db3-d9ce01d592d2","colab":{"base_uri":"https://localhost:8080/"}},"source":["result"],"execution_count":15,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[1],\n","       [1],\n","       [1],\n","       [1],\n","       [1],\n","       [1],\n","       [1],\n","       [1],\n","       [1],\n","       [1],\n","       [1],\n","       [1],\n","       [1],\n","       [1],\n","       [1],\n","       [1],\n","       [1],\n","       [1],\n","       [1],\n","       [1],\n","       [1],\n","       [1],\n","       [1],\n","       [1],\n","       [1],\n","       [1],\n","       [1],\n","       [1],\n","       [1],\n","       [1],\n","       [1],\n","       [1],\n","       [1],\n","       [1],\n","       [1],\n","       [1],\n","       [1],\n","       [1],\n","       [1],\n","       [1],\n","       [1],\n","       [1],\n","       [1],\n","       [1],\n","       [1],\n","       [1],\n","       [1],\n","       [1],\n","       [1],\n","       [1]], dtype=int32)"]},"metadata":{"tags":[]},"execution_count":15}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"E2K3pUWjnBl6","executionInfo":{"status":"ok","timestamp":1625454737154,"user_tz":-540,"elapsed":416,"user":{"displayName":"김미소","photoUrl":"","userId":"06891495598567292881"}},"outputId":"fb1860bb-11a3-4632-9c6f-2f820ca4a3b7"},"source":["from sklearn import metrics\n","report = metrics. classification_report(y_test, result)\n","print(report)"],"execution_count":12,"outputs":[{"output_type":"stream","text":["              precision    recall  f1-score   support\n","\n","         0.0       0.00      0.00      0.00        40\n","         1.0       0.20      1.00      0.33        10\n","\n","    accuracy                           0.20        50\n","   macro avg       0.10      0.50      0.17        50\n","weighted avg       0.04      0.20      0.07        50\n","\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/sklearn/metrics/_classification.py:1272: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pIxYl5y_nCvu","executionInfo":{"status":"ok","timestamp":1625454737154,"user_tz":-540,"elapsed":14,"user":{"displayName":"김미소","photoUrl":"","userId":"06891495598567292881"}},"outputId":"ffa9f547-4915-4cef-c794-589b602dd5dc"},"source":["print(metrics.precision_score(y_test, result))\n","print(metrics.recall_score(y_test, result))"],"execution_count":13,"outputs":[{"output_type":"stream","text":["0.2\n","1.0\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":350},"id":"iFpVH040nF9B","executionInfo":{"status":"ok","timestamp":1625454737156,"user_tz":-540,"elapsed":13,"user":{"displayName":"김미소","photoUrl":"","userId":"06891495598567292881"}},"outputId":"969cc1b2-3f8e-47b9-bd80-b6ef827cd323"},"source":["plot_auc_roc(model)"],"execution_count":14,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/keras/engine/sequential.py:450: UserWarning: `model.predict_classes()` is deprecated and will be removed after 2021-01-01. Please use instead:* `np.argmax(model.predict(x), axis=-1)`,   if your model does multi-class classification   (e.g. if it uses a `softmax` last-layer activation).* `(model.predict(x) > 0.5).astype(\"int32\")`,   if your model does binary classification   (e.g. if it uses a `sigmoid` last-layer activation).\n","  warnings.warn('`model.predict_classes()` is deprecated and '\n"],"name":"stderr"},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]}]}